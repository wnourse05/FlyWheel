<launch>
  <param name="office_geom" command="$(find xacro)/xacro --inorder '$(find sns_flywheel)/urdf/office_geometry.urdf.xacro'" />

    <arg name="robot_x" default="0.0"/>
    <arg name="robot_y" default="0.0"/>
    <arg name="robot_z" default="0.2"/>
    <arg name="robot_yaw" default="0.0" />

    <arg name="rviz" default="false"/>

    <arg name="world_x" default="0.0"/>
    <arg name="world_y" default="0.0"/>
    <arg name="world_z" default="0.0"/>
    <arg name="world_yaw" default="0.0"/>

    <arg name="use_sim_time" default="true" />
    <arg name="paused" default="true"/>
    <arg name="gui" default="false" />
    <arg name="headless" default="false" />
    <arg name="world_name" default="$(find sns_flywheel)/worlds/flywheel_office.sdf" />

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="0" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="use_sim_time" value="$(arg use_sim_time)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="headless" value="$(arg headless)" />
      <arg name="world_name" value="$(arg world_name)" />
    </include>

    <!-- <node name="office_world_spawner" pkg="gazebo_ros" type="spawn_model"
      args="-urdf -model office_geometry -param office_geom -x $(arg world_x) -y $(arg world_y) -z $(arg world_z) -Y $(arg world_yaw)" /> -->

  <arg name="model" default="$(find sns_flywheel)/urdf/flywheel.urdf"/>
  <arg name="rvizconfig" default="$(find sns_flywheel)/rviz/flywheel.rviz" />

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 0.5 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
  </group>

  <node pkg="sns_flywheel" type="gazebo_data_collection.py" name="teleop" output="screen"/>

</launch>
